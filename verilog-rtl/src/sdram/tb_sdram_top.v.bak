`timescale		1ns/1ns
 
module tb_sdram_top;
 
reg				sclk;
reg				reset;
//--------------------------
wire			sdram_clk		;
wire			sdram_cke		;
wire			sdram_cs_n		;
wire			sdram_ras_n		;
wire			sdram_cas_n		;
wire			sdram_we_n		;
wire [1:0]		sdram_bank		;
wire [12:0]		sdram_addr		;
wire [1:0]		sdram_dqm		;
wire [15:0]		sdram_dq	    ;
wire			flag_init_end	;
 
reg				wr_trig			;
reg				rd_trig			;
 
initial	begin
	wr_trig	<= 0;
	rd_trig	<= 0;
	#205000		//初始化之后才能触发
	wr_trig	<= 1;
	#20			//产生触发脉冲
	wr_trig	<= 0;
	#126500 
	rd_trig	<= 1;
	#20
	rd_trig	<= 0;
    #100
    $finish;
end
 
 
initial	begin
	sclk	<=	1'b1;
	reset 	<=  1'b0;
	#100
	reset 	<=  1'b1;
end
 
always	#10		sclk	=	~sclk;
//重定义
defparam		sdram_model_plus_inst.addr_bits		=	13;	//行地址
defparam		sdram_model_plus_inst.data_bits		=	16;	
defparam		sdram_model_plus_inst.col_bits		=	9;	//列地址
defparam		sdram_model_plus_inst.mem_sizes		=	4*1024*1024;//4M
 
sdram_top sdram_top_inst(
		//system singles
		.sclk					(sclk			),
		.reset					(reset			),
		//SDRAM Interface   
		.sdram_clk				(sdram_clk		),
		.sdram_cke				(sdram_cke		),
		.sdram_cs_n				(sdram_cs_n		),
		.sdram_cas_n			(sdram_cas_n	),
		.sdram_ras_n			(sdram_ras_n	),
		.sdram_we_n				(sdram_we_n		),
		.sdram_bank				(sdram_bank		),
		.sdram_addr				(sdram_addr		),
		.sdram_dqm				(sdram_dqm		),
		.sdram_dq		        (sdram_dq		),
		.flag_init_end			(flag_init_end	),
		.wr_trig				(wr_trig		),
		.rd_trig				(rd_trig		)
);                          
 
sdram_model_plus sdram_model_plus_inst(
		.Dq						(sdram_dq		), 
		.Addr					(sdram_addr		), 
		.Ba						(sdram_bank		), 
		.Clk					(sdram_clk		), 
		.Cke					(sdram_cke		), 
		.Cs_n					(sdram_cs_n		), 
		.Ras_n					(sdram_ras_n	), 
		.Cas_n					(sdram_cas_n	), 
		.We_n					(sdram_we_n		), 
		.Dqm					(sdram_dqm		),
		.Debug                  (1'b1 			)
);

initial begin            
    $dumpfile("sdram.wave.vcd");        // generate vcd file
    $dumpvars;
end

endmodule
